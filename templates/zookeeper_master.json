{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Apache Zookeeper",
    "Parameters": {
        "ZookInstanceType": {
            "Description": "EC2 instance type for the Zookeeper node",
            "Type": "String",
            "Default": "t2.small",
            "AllowedValues": [
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "ConstraintDescription": "Must be an allowed EC2 instance type"
        },
        "ZookKeyName": {
            "Description": "Existing EC2 KeyPair for SSH access",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "ZookVpcId": {
            "Description": "VPC ID in which the EC2 instance will reside",
            "Type": "AWS::EC2::VPC::Id"
        },
        "ZookSubnetIds": {
            "Description": "List of subnet ids in which to place instances",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "ZookDesiredCapacity": {
            "Description": "Desired number of Zookeeper instances",
            "Type": "String"
        },
        "ZookBucketName": {
            "Description": "Bucket for configurations",
            "Type": "String"
        },
        "ZookDownloadUrl": {
            "Description": "URL from which to download the Kafka tarball",
            "Type": "String",
            "Default": "http://apache.osuosl.org/zookeeper/zookeeper-3.4.10/zookeeper-3.4.10.tar.gz"
        },
        "ZookAllowedRangeApp": {
            "Description": "Allowable IP range for application connectivity",
            "Type": "String",
            "MinLength": 9,
            "MaxLength": 18,
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range in the form - x.x.x.x/x"
        },
        "ZookAllowedRangeSSH": {
            "Description": "Allowable IP range for SSH access",
            "Type": "String",
            "MinLength": 9,
            "MaxLength": 18,
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range in the form - x.x.x.x/x"
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch": {
            "t1.micro": {
                "Arch": "PV64"
            },
            "m1.small": {
                "Arch": "PV64"
            },
            "m1.medium": {
                "Arch": "PV64"
            },
            "m1.large": {
                "Arch": "PV64"
            },
            "m1.xlarge": {
                "Arch": "PV64"
            },
            "m2.xlarge": {
                "Arch": "PV64"
            },
            "m2.2xlarge": {
                "Arch": "PV64"
            },
            "m2.4xlarge": {
                "Arch": "PV64"
            },
            "c1.medium": {
                "Arch": "PV64"
            },
            "c1.xlarge": {
                "Arch": "PV64"
            },
            "t2.nano": {
                "Arch": "HVM64"
            },
            "t2.micro": {
                "Arch": "HVM64"
            },
            "t2.small": {
                "Arch": "HVM64"
            },
            "t2.medium": {
                "Arch": "HVM64"
            },
            "t2.large": {
                "Arch": "HVM64"
            },
            "m3.medium": {
                "Arch": "HVM64"
            },
            "m3.large": {
                "Arch": "HVM64"
            },
            "m3.xlarge": {
                "Arch": "HVM64"
            },
            "m3.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.large": {
                "Arch": "HVM64"
            },
            "m4.xlarge": {
                "Arch": "HVM64"
            },
            "m4.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.4xlarge": {
                "Arch": "HVM64"
            },
            "m4.10xlarge": {
                "Arch": "HVM64"
            },
            "c3.large": {
                "Arch": "HVM64"
            },
            "c3.xlarge": {
                "Arch": "HVM64"
            },
            "c3.2xlarge": {
                "Arch": "HVM64"
            },
            "c3.4xlarge": {
                "Arch": "HVM64"
            },
            "c3.8xlarge": {
                "Arch": "HVM64"
            },
            "c4.large": {
                "Arch": "HVM64"
            },
            "c4.xlarge": {
                "Arch": "HVM64"
            },
            "c4.2xlarge": {
                "Arch": "HVM64"
            },
            "c4.4xlarge": {
                "Arch": "HVM64"
            },
            "c4.8xlarge": {
                "Arch": "HVM64"
            },
            "g2.2xlarge": {
                "Arch": "HVM64"
            },
            "g2.8xlarge": {
                "Arch": "HVM64"
            },
            "r3.large": {
                "Arch": "HVM64"
            },
            "r3.xlarge": {
                "Arch": "HVM64"
            },
            "r3.2xlarge": {
                "Arch": "HVM64"
            },
            "r3.4xlarge": {
                "Arch": "HVM64"
            },
            "r3.8xlarge": {
                "Arch": "HVM64"
            },
            "r4.large": {
                "Arch": "HVM64"
            },
            "r4.xlarge": {
                "Arch": "HVM64"
            },
            "r4.2xlarge": {
                "Arch": "HVM64"
            },
            "r4.4xlarge": {
                "Arch": "HVM64"
            },
            "r4.8xlarge": {
                "Arch": "HVM64"
            },
            "r4.16xlarge": {
                "Arch": "HVM64"
            },
            "i2.xlarge": {
                "Arch": "HVM64"
            },
            "i2.2xlarge": {
                "Arch": "HVM64"
            },
            "i2.4xlarge": {
                "Arch": "HVM64"
            },
            "i2.8xlarge": {
                "Arch": "HVM64"
            },
            "d2.xlarge": {
                "Arch": "HVM64"
            },
            "d2.2xlarge": {
                "Arch": "HVM64"
            },
            "d2.4xlarge": {
                "Arch": "HVM64"
            },
            "d2.8xlarge": {
                "Arch": "HVM64"
            },
            "hi1.4xlarge": {
                "Arch": "HVM64"
            },
            "hs1.8xlarge": {
                "Arch": "HVM64"
            },
            "cr1.8xlarge": {
                "Arch": "HVM64"
            },
            "cc2.8xlarge": {
                "Arch": "HVM64"
            }
        },
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "PV64": "ami-7a3dd76c",
                "HVM64": "ami-0b33d91d",
                "HVMG2": "ami-bb18efad"
            },
            "us-east-2": {
                "PV64": "_unsupported",
                "HVM64": "ami-c55673a0",
                "HVMG2": "_unsupported"
            },
            "us-west-2": {
                "PV64": "ami-8a72cdea",
                "HVM64": "ami-f173cc91",
                "HVMG2": "ami-31912f51"
            },
            "us-west-1": {
                "PV64": "ami-f25a0892",
                "HVM64": "ami-165a0876",
                "HVMG2": "ami-0a9dcf6a"
            },
            "ca-central-1": {
                "PV64": "_unsupported",
                "HVM64": "ami-ebed508f",
                "HVMG2": "_unsupported"
            },
            "eu-west-1": {
                "PV64": "ami-e0f2af86",
                "HVM64": "ami-70edb016",
                "HVMG2": "ami-873e61e1"
            },
            "eu-west-2": {
                "PV64": "_unsupported",
                "HVM64": "ami-f1949e95",
                "HVMG2": "_unsupported"
            },
            "eu-central-1": {
                "PV64": "ami-3b0fc054",
                "HVM64": "ami-af0fc0c0",
                "HVMG2": "ami-a16ba4ce"
            },
            "ap-southeast-1": {
                "PV64": "ami-2c963c4f",
                "HVM64": "ami-dc9339bf",
                "HVMG2": "ami-1c0ba17f"
            },
            "ap-northeast-2": {
                "PV64": "_unsupported",
                "HVM64": "ami-dac312b4",
                "HVMG2": "_unsupported"
            },
            "ap-northeast-1": {
                "PV64": "ami-bdd2abda",
                "HVM64": "ami-56d4ad31",
                "HVMG2": "ami-6b443f0c"
            },
            "ap-southeast-2": {
                "PV64": "ami-6f47400c",
                "HVM64": "ami-1c47407f",
                "HVMG2": "ami-bf0d0adc"
            },
            "ap-south-1": {
                "PV64": "_unsupported",
                "HVM64": "ami-f9daac96",
                "HVMG2": "_unsupported"
            },
            "sa-east-1": {
                "PV64": "ami-2a096c46",
                "HVM64": "ami-80086dec",
                "HVMG2": "_unsupported"
            },
            "cn-north-1": {
                "PV64": "ami-34c21559",
                "HVM64": "ami-e6c7108b",
                "HVMG2": "_unsupported"
            },
            "us-gov-west-1": {
                "PV64": "ami-6d1da60c",
                "HVM64": "ami-b21fa4d3",
                "HVMG2": "_unsupported"
            }
        }
    },
    "Resources": {
        "ZookBucket": {
            "Properties": {
                "BucketName": {
                    "Ref": "ZookBucketName"
                }
            },
            "Type": "AWS::S3::Bucket"
        },
        "ZookQueueInit": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "DelaySeconds": 0,
                "MessageRetentionPeriod": 600,
                "QueueName": "ZookQueueInit",
                "ReceiveMessageWaitTimeSeconds": 5,
                "VisibilityTimeout": 1
            }
        },
        "ZookQueueReplace": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "DelaySeconds": 0,
                "MessageRetentionPeriod": 600,
                "QueueName": "ZookQueueReplace",
                "ReceiveMessageWaitTimeSeconds": 5,
                "VisibilityTimeout": 1
            }
        },
        "ZookSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Zookeeper",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": {
                            "Ref": "ZookAllowedRangeSSH"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 2180,
                        "ToPort": 2180,
                        "SourceSecurityGroupId": {
                            "Ref": "ZookLoadBalancerSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 2181,
                        "ToPort": 2181,
                        "SourceSecurityGroupId": {
                            "Ref": "ZookLoadBalancerSecurityGroup"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "ZookVpcId"
                }
            }
        },
        "ZookInternal": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "IpProtocol": "tcp",
                "FromPort": 2888,
                "ToPort": 2888,
                "SourceSecurityGroupId": {
                    "Ref": "ZookSecurityGroup"
                },
                "GroupId": {
                    "Ref": "ZookSecurityGroup"
                }
            }
        },
        "ZookLeaderElection": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "IpProtocol": "tcp",
                "FromPort": 3888,
                "ToPort": 3888,
                "SourceSecurityGroupId": {
                    "Ref": "ZookSecurityGroup"
                },
                "GroupId": {
                    "Ref": "ZookSecurityGroup"
                }
            }
        },
        "ZookLoadBalancerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Zookeeper ELB",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 2180,
                        "ToPort": 2180,
                        "CidrIp": {
                            "Ref": "ZookAllowedRangeApp"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 2181,
                        "ToPort": 2181,
                        "CidrIp": {
                            "Ref": "ZookAllowedRangeApp"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "ZookVpcId"
                }
            }
        },
        "ZookLoadBalancerInternal": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "IpProtocol": "tcp",
                "FromPort": 2181,
                "ToPort": 2181,
                "SourceSecurityGroupId": {
                    "Ref": "ZookSecurityGroup"
                },
                "GroupId": {
                    "Ref": "ZookLoadBalancerSecurityGroup"
                }
            }
        },
        "ZookRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "ZookPolicy1": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "logs:DescribeLogStreams"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:logs:*:*:*"
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ZookPolicyLogging",
                "Roles": [
                    {
                        "Ref": "ZookRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "ZookPolicy2": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "cloudwatch:PutMetricData"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ZookPolicyCloudwatch",
                "Roles": [
                    {
                        "Ref": "ZookRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "ZookPolicy3": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "s3:GetObject",
                                "s3:PutObject"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "ZookBucket"
                                        },
                                        "/*"
                                    ]
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ZookPolicyS3",
                "Roles": [
                    {
                        "Ref": "ZookRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "ZookPolicy4": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "ec2:DescribeTags",
                                "ec2:CreateTags",
                                "ec2:DeleteTags"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ZookPolicyTags",
                "Roles": [
                    {
                        "Ref": "ZookRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "ZookPolicy5": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sqs:SendMessage",
                                "sqs:ReceiveMessage",
                                "sqs:DeleteMessage"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "ZookQueueInit",
                                    "Arn"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ZookPolicySQS1",
                "Roles": [
                    {
                        "Ref": "ZookRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "ZookPolicy6": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sqs:SendMessage",
                                "sqs:ReceiveMessage",
                                "sqs:DeleteMessage"
                            ],
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "ZookQueueReplace",
                                    "Arn"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ZookPolicySQS2",
                "Roles": [
                    {
                        "Ref": "ZookRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "ZookPolicy7": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "ec2:DescribeInstances",
                                "elasticloadbalancing:DescribeLoadBalancers",
                                "autoscaling:DescribeAutoScalingGroups"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "ZookPolicyELB",
                "Roles": [
                    {
                        "Ref": "ZookRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "ZookInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ZookRole"
                    }
                ]
            }
        },
        "ZookLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "ConnectionDrainingPolicy": {
                    "Enabled": true,
                    "Timeout": 600
                },
                "ConnectionSettings": {
                    "IdleTimeout": 300
                },
                "CrossZone": true,
                "HealthCheck": {
                    "HealthyThreshold": "6",
                    "Interval": "10",
                    "Target": "HTTP:2180/",
                    "Timeout": "2",
                    "UnhealthyThreshold": "2"
                },
                "Listeners": [
                    {
                        "InstancePort": "2180",
                        "InstanceProtocol": "HTTP",
                        "LoadBalancerPort": "2180",
                        "Protocol": "HTTP"
                    },
                    {
                        "InstancePort": "2181",
                        "InstanceProtocol": "TCP",
                        "LoadBalancerPort": "2181",
                        "Protocol": "TCP"
                    }
                ],
                "Scheme": "internal",
                "SecurityGroups": [
                    {
                        "Ref": "ZookLoadBalancerSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Fn::Select": [
                            0,
                            {
                                "Ref": "ZookSubnetIds"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ZookLoadBalancer"
                    }
                ]
            }
        },
        "ZookAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "DesiredCapacity": {
                    "Ref": "ZookDesiredCapacity"
                },
                "HealthCheckGracePeriod": 300,
                "HealthCheckType": "ELB",
                "LaunchConfigurationName": {
                    "Ref": "ZookLaunchConfiguration"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "ZookLoadBalancer"
                    }
                ],
                "MaxSize": 9,
                "MetricsCollection": [
                    {
                        "Granularity": "1Minute"
                    }
                ],
                "MinSize": 1,
                "Tags": [
                    {
                        "Key": "Name",
                        "PropagateAtLaunch": true,
                        "Value": "Zookeeper"
                    }
                ],
                "VPCZoneIdentifier": [
                    {
                        "Fn::Select": [
                            0,
                            {
                                "Ref": "ZookSubnetIds"
                            }
                        ]
                    }
                ]
            }
        },
        "ZookLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": false,
                "IamInstanceProfile": {
                    "Ref": "ZookInstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref": "ZookInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceMonitoring": true,
                "InstanceType": {
                    "Ref": "ZookInstanceType"
                },
                "KeyName": {
                    "Ref": "ZookKeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "ZookSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Sub": "#!/bin/bash\nyum update -y\n\n# Kafka 10 requires Java 1.8\nyum install java-1.8.0 -y\n\n# Cloudwatch Logs\nyum install awslogs -y\naws s3 cp s3://higs-public-blog/kafka/config/awslogs_all.conf /etc/awslogs/awslogs.conf\nservice awslogs start\nchkconfig awslogs on\n\n# Zookeeper Tarball Installation\nZOOK_URL=${ZookDownloadUrl}\nZOOK_FILE=`echo $ZOOK_URL | awk -F/ '{print $6}'`\nZOOK_DIR=`echo $ZOOK_FILE | rev | cut -c 8- | rev`\ncd /tmp && wget -q $ZOOK_URL && tar -zxvf /tmp/$ZOOK_FILE -C /opt\ncd /opt/$ZOOK_DIR\n\n# Zookeeper Settings\nmkdir -p /var/zookeeper\necho 'tickTime=2000' >> conf/zoo.cfg\necho 'initLimit=5' >> conf/zoo.cfg\necho 'syncLimit=2' >> conf/zoo.cfg\necho 'dataDir=/var/zookeeper' >> conf/zoo.cfg\necho 'clientPort=2181' >> conf/zoo.cfg\n\n# Zookeeper Orchestration Initialization\nHOSTNAME=$(curl -s http://169.254.169.254/latest/meta-data/hostname)\npip install boto3\nmkdir -p /opt/aws/{bin,etc,log,tmp}\n\n# Create 'zookeeper' Service\naws s3 cp s3://higs-public-blog/kafka/code/init_zookeeper.sh /etc/init.d/zookeeper\nchmod +x /etc/init.d/zookeeper\nsed -i \"s:{{ZookDir}}:$ZOOK_DIR:g\" /etc/init.d/zookeeper\n\n# Create 'check_zookeeper' Service\naws s3 cp s3://higs-public-blog/kafka/code/check_zookeeper.py /opt/aws/bin/check_zookeeper.py\naws s3 cp s3://higs-public-blog/kafka/code/init_check_zookeeper.sh /etc/init.d/check_zookeeper\nchmod +x /etc/init.d/check_zookeeper\n\n# Configure 'register_zookeeper' Utility\naws s3 cp s3://higs-public-blog/kafka/code/register_asg.py /opt/aws/bin/register_asg.py\naws s3 cp s3://higs-public-blog/kafka/code/register_ec2.py /opt/aws/bin/register_ec2.py\naws s3 cp s3://higs-public-blog/kafka/code/register_file.py /opt/aws/bin/register_file.py\naws s3 cp s3://higs-public-blog/kafka/code/register_queue.py /opt/aws/bin/register_queue.py\naws s3 cp s3://higs-public-blog/kafka/code/register_util.py /opt/aws/bin/register_util.py\naws s3 cp s3://higs-public-blog/kafka/code/register_zookeeper.py /opt/aws/bin/register_zookeeper.py\naws s3 cp s3://higs-public-blog/kafka/config/register_zookeeper.conf /opt/aws/etc/register_zookeeper.conf\nsed -i \"s:{{ZookBucket}}:${ZookBucket}:g\" /opt/aws/etc/register_zookeeper.conf\nsed -i \"s:{{ZookDir}}:$ZOOK_DIR:g\" /opt/aws/etc/register_zookeeper.conf\nsed -i \"s;{{ZookQueueInit}};${ZookQueueInit};g\" /opt/aws/etc/register_zookeeper.conf\nsed -i \"s;{{ZookQueueReplace}};${ZookQueueReplace};g\" /opt/aws/etc/register_zookeeper.conf\npython /opt/aws/bin/register_zookeeper.py\n\n# Start Zookeeper\nservice zookeeper start\n\n# Perform ensemble configuration\npython /opt/aws/bin/register_zookeeper.py\n\n# Start Zookeeper health check\nservice check_zookeeper start\nsleep 10\n\n# Tag the Zookeepers\nINSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\nREGION=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | grep '\\\"region\\\"' | cut -d\\\" -f4)\nZOOKEEPER_ID=$(cat /var/zookeeper/myid)\naws ec2 create-tags --region $REGION --resources $INSTANCE_ID --tags Key=ApacheId,Value=$ZOOKEEPER_ID\naws ec2 describe-tags --region $REGION --filter \"Name=resource-id,Values=$INSTANCE_ID\" \"Name=key,Values=ApacheId\"\n"
                    }
                }
            }
        }
    },
    "Outputs": {
        "ZookSecurityGroupId": {
            "Description": "Security group ID for Zookeeper",
            "Value": {
                "Fn::GetAtt": [
                    "ZookSecurityGroup",
                    "GroupId"
                ]
            }
        },
        "ZookLoadBalancerSecurityGroupId": {
            "Description": "Security group ID for Zookeeper ELB",
            "Value": {
                "Fn::GetAtt": [
                    "ZookLoadBalancerSecurityGroup",
                    "GroupId"
                ]
            }
        },
        "ZookQueueInitUrl": {
            "Description": "SQS Queue URL",
            "Value": {
                "Ref": "ZookQueueInit"
            }
        },
        "ZookQueueInitArn": {
            "Description": "SQS Queue ARN",
            "Value": {
                "Fn::GetAtt": [
                    "ZookQueueInit",
                    "Arn"
                ]
            }
        },
        "ZookQueueInitName": {
            "Description": "SQS Queue Name",
            "Value": {
                "Fn::GetAtt": [
                    "ZookQueueInit",
                    "QueueName"
                ]
            }
        },
        "ZookQueueReplaceUrl": {
            "Description": "SQS Queue URL",
            "Value": {
                "Ref": "ZookQueueReplace"
            }
        },
        "ZookQueueReplaceArn": {
            "Description": "SQS Queue ARN",
            "Value": {
                "Fn::GetAtt": [
                    "ZookQueueReplace",
                    "Arn"
                ]
            }
        },
        "ZookQueueReplaceName": {
            "Description": "SQS Queue Name",
            "Value": {
                "Fn::GetAtt": [
                    "ZookQueueReplace",
                    "QueueName"
                ]
            }
        },
        "ZookLoadBalancerId": {
            "Description": "Load balancer ID for zookeeper",
            "Value": {
                "Ref": "ZookLoadBalancer"
            }
        },
        "ZookLoadBalancerName": {
            "Description": "Load balancer DNS name for zookeeper",
            "Value": {
                "Fn::GetAtt": [
                    "ZookLoadBalancer",
                    "DNSName"
                ]
            }
        }
    }
}
